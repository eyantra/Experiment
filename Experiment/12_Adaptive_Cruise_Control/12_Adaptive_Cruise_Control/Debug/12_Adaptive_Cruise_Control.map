Archive member included because of file (symbol)

c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o (exit)
c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
                              12_Adaptive_Cruise_Control.o (__do_clear_bss)
c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_umulhisi3.o)
                              12_Adaptive_Cruise_Control.o (__umulhisi3)

Allocating common symbols
Common symbol       size              file

million             0x2               12_Adaptive_Cruise_Control.o
temp                0x2               12_Adaptive_Cruise_Control.o
ADC_Value           0x1               12_Adaptive_Cruise_Control.o
tens                0x2               12_Adaptive_Cruise_Control.o
hundred             0x2               12_Adaptive_Cruise_Control.o
unit                0x2               12_Adaptive_Cruise_Control.o
thousand            0x2               12_Adaptive_Cruise_Control.o

Discarded input sections

 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
 .text          0x00000000        0x0 12_Adaptive_Cruise_Control.o
 .bss           0x00000000        0x0 12_Adaptive_Cruise_Control.o
 .text.lcd_string
                0x00000000       0x1e 12_Adaptive_Cruise_Control.o
 .text.buzzer_on
                0x00000000        0x8 12_Adaptive_Cruise_Control.o
 .text.buzzer_off
                0x00000000        0x8 12_Adaptive_Cruise_Control.o
 .text.stop     0x00000000        0x8 12_Adaptive_Cruise_Control.o
 .bss.Front_IR_Sensor
                0x00000000        0x1 12_Adaptive_Cruise_Control.o
 .bss.Right_white_line
                0x00000000        0x1 12_Adaptive_Cruise_Control.o
 .bss.Center_white_line
                0x00000000        0x1 12_Adaptive_Cruise_Control.o
 .bss.Left_white_line
                0x00000000        0x1 12_Adaptive_Cruise_Control.o
 .bss.flag2     0x00000000        0x1 12_Adaptive_Cruise_Control.o
 .bss.flag1     0x00000000        0x1 12_Adaptive_Cruise_Control.o
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .text          0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_umulhisi3.o)
 .bss           0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_umulhisi3.o)
 .text.libgcc.div
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_umulhisi3.o)
 .text.libgcc   0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x00000000        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_umulhisi3.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00100000         xr
data             0x00800200         0x0000fe00         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800200
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
LOAD 12_Adaptive_Cruise_Control.o
START GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6\libm.a
END GROUP
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6\libc.a
LOAD c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x642
 *(.vectors)
 .vectors       0x00000000       0xe4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x000000e4                . = ALIGN (0x2)
                0x000000e4                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000e4        0x0 linker stubs
 *(.trampolines*)
                0x000000e4                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000e4                __ctors_start = .
 *(.ctors)
                0x000000e4                __ctors_end = .
                0x000000e4                __dtors_start = .
 *(.dtors)
                0x000000e4                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000e4        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
                0x000000e4                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000e4       0x10 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000f4       0x10 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
                0x000000f4                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000104        0x8 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
 *(.init9)
 *(.text)
 .text          0x0000010c        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
                0x0000010c                __vector_38
                0x0000010c                __vector_22
                0x0000010c                __vector_28
                0x0000010c                __vector_1
                0x0000010c                __vector_32
                0x0000010c                __vector_34
                0x0000010c                __vector_24
                0x0000010c                __vector_12
                0x0000010c                __vector_55
                0x0000010c                __vector_46
                0x0000010c                __bad_interrupt
                0x0000010c                __vector_6
                0x0000010c                __vector_31
                0x0000010c                __vector_35
                0x0000010c                __vector_39
                0x0000010c                __vector_3
                0x0000010c                __vector_23
                0x0000010c                __vector_30
                0x0000010c                __vector_45
                0x0000010c                __vector_25
                0x0000010c                __vector_11
                0x0000010c                __vector_54
                0x0000010c                __vector_13
                0x0000010c                __vector_17
                0x0000010c                __vector_19
                0x0000010c                __vector_56
                0x0000010c                __vector_7
                0x0000010c                __vector_49
                0x0000010c                __vector_41
                0x0000010c                __vector_43
                0x0000010c                __vector_27
                0x0000010c                __vector_5
                0x0000010c                __vector_33
                0x0000010c                __vector_47
                0x0000010c                __vector_52
                0x0000010c                __vector_37
                0x0000010c                __vector_4
                0x0000010c                __vector_44
                0x0000010c                __vector_51
                0x0000010c                __vector_9
                0x0000010c                __vector_2
                0x0000010c                __vector_21
                0x0000010c                __vector_15
                0x0000010c                __vector_36
                0x0000010c                __vector_29
                0x0000010c                __vector_40
                0x0000010c                __vector_8
                0x0000010c                __vector_26
                0x0000010c                __vector_48
                0x0000010c                __vector_14
                0x0000010c                __vector_53
                0x0000010c                __vector_10
                0x0000010c                __vector_50
                0x0000010c                __vector_16
                0x0000010c                __vector_18
                0x0000010c                __vector_20
                0x0000010c                __vector_42
                0x00000110                . = ALIGN (0x2)
 *(.text.*)
 .text.lcd_set_4bit
                0x00000110       0x86 12_Adaptive_Cruise_Control.o
                0x00000110                lcd_set_4bit
 .text.lcd_wr_command
                0x00000196       0x4a 12_Adaptive_Cruise_Control.o
                0x00000196                lcd_wr_command
 .text.lcd_init
                0x000001e0       0x2e 12_Adaptive_Cruise_Control.o
                0x000001e0                lcd_init
 .text.lcd_wr_char
                0x0000020e       0x4a 12_Adaptive_Cruise_Control.o
                0x0000020e                lcd_wr_char
 .text.lcd_home
                0x00000258        0x8 12_Adaptive_Cruise_Control.o
                0x00000258                lcd_home
 .text.lcd_cursor
                0x00000260       0x3e 12_Adaptive_Cruise_Control.o
                0x00000260                lcd_cursor
 .text.lcd_print
                0x0000029e      0x1f8 12_Adaptive_Cruise_Control.o
                0x0000029e                lcd_print
 .text.lcd_port_config
                0x00000496        0xe 12_Adaptive_Cruise_Control.o
                0x00000496                lcd_port_config
 .text.adc_pin_config
                0x000004a4        0xe 12_Adaptive_Cruise_Control.o
                0x000004a4                adc_pin_config
 .text.motion_pin_config
                0x000004b2       0x22 12_Adaptive_Cruise_Control.o
                0x000004b2                motion_pin_config
 .text.buzzer_pin_config
                0x000004d4        0x6 12_Adaptive_Cruise_Control.o
                0x000004d4                buzzer_pin_config
 .text.port_init
                0x000004da       0x12 12_Adaptive_Cruise_Control.o
                0x000004da                port_init
 .text.timer5_init
                0x000004ec       0x36 12_Adaptive_Cruise_Control.o
                0x000004ec                timer5_init
 .text.adc_init
                0x00000522       0x1a 12_Adaptive_Cruise_Control.o
                0x00000522                adc_init
 .text.ADC_Conversion
                0x0000053c       0x36 12_Adaptive_Cruise_Control.o
                0x0000053c                ADC_Conversion
 .text.print_sensor
                0x00000572       0x28 12_Adaptive_Cruise_Control.o
                0x00000572                print_sensor
 .text.velocity
                0x0000059a        0xa 12_Adaptive_Cruise_Control.o
                0x0000059a                velocity
 .text.motion_set
                0x000005a4        0xc 12_Adaptive_Cruise_Control.o
                0x000005a4                motion_set
 .text.forward  0x000005b0        0x8 12_Adaptive_Cruise_Control.o
                0x000005b0                forward
 .text.right    0x000005b8        0x8 12_Adaptive_Cruise_Control.o
                0x000005b8                right
 .text.init_devices
                0x000005c0       0x12 12_Adaptive_Cruise_Control.o
                0x000005c0                init_devices
 .text.main     0x000005d2       0x54 12_Adaptive_Cruise_Control.o
                0x000005d2                main
 .text.libgcc.mul
                0x00000626       0x18 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_umulhisi3.o)
                0x00000626                __umulhisi3
                0x0000063e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000063e        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
                0x0000063e                _exit
                0x0000063e                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000063e        0x4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 *(.fini0)
                0x00000642                _etext = .

.data           0x00800200        0x0 load address 0x00000642
                0x00800200                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800200        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o
 .data          0x00800200        0x0 12_Adaptive_Cruise_Control.o
 .data          0x00800200        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_exit.o)
 .data          0x00800200        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_clear_bss.o)
 .data          0x00800200        0x0 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/avr6\libgcc.a(_umulhisi3.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800200                . = ALIGN (0x2)
                0x00800200                _edata = .
                0x00800200                PROVIDE (__data_end, .)

.bss            0x00800200        0xe
                0x00800200                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.Front_Sharp_Sensor
                0x00800200        0x1 12_Adaptive_Cruise_Control.o
                0x00800200                Front_Sharp_Sensor
 *(COMMON)
 COMMON         0x00800201        0xd 12_Adaptive_Cruise_Control.o
                0x00800201                million
                0x00800203                temp
                0x00800205                ADC_Value
                0x00800206                tens
                0x00800208                hundred
                0x0080020a                unit
                0x0080020c                thousand
                0x0080020e                PROVIDE (__bss_end, .)
                0x00000642                __data_load_start = LOADADDR (.data)
                0x00000642                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080020e        0x0
                0x0080020e                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080020e                PROVIDE (__noinit_end, .)
                0x0080020e                _end = .
                0x0080020e                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6e4
 *(.stab)
 .stab          0x00000000      0x6e4 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/atmel toolchain/avr8 gcc/native/3.4.2.939/avr8-gnu-toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr6/crtm2560.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f 12_Adaptive_Cruise_Control.o
                                 0x30 (size before relaxing)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xe8
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0xe8 12_Adaptive_Cruise_Control.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x00000000      0xb96
 *(.debug_info)
 .debug_info    0x00000000      0xb96 12_Adaptive_Cruise_Control.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x26f
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x26f 12_Adaptive_Cruise_Control.o

.debug_line     0x00000000      0x492
 *(.debug_line)
 .debug_line    0x00000000      0x492 12_Adaptive_Cruise_Control.o

.debug_frame    0x00000000      0x1e0
 *(.debug_frame)
 .debug_frame   0x00000000      0x1e0 12_Adaptive_Cruise_Control.o

.debug_str      0x00000000      0x370
 *(.debug_str)
 .debug_str     0x00000000      0x370 12_Adaptive_Cruise_Control.o
                                0x3a9 (size before relaxing)

.debug_loc      0x00000000      0x537
 *(.debug_loc)
 .debug_loc     0x00000000      0x537 12_Adaptive_Cruise_Control.o

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges   0x00000000       0xd8
 *(.debug_ranges)
 .debug_ranges  0x00000000       0xd8 12_Adaptive_Cruise_Control.o

.debug_macro
 *(.debug_macro)
OUTPUT(12_Adaptive_Cruise_Control.elf elf32-avr)
LOAD linker stubs
